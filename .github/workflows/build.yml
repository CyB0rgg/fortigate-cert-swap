name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            name: fortigate-cert-swap-linux-amd64
          - goos: linux
            goarch: arm64
            name: fortigate-cert-swap-linux-arm64
          - goos: darwin
            goarch: amd64
            name: fortigate-cert-swap-darwin-amd64
          - goos: darwin
            goarch: arm64
            name: fortigate-cert-swap-darwin-arm64
          - goos: windows
            goarch: amd64
            name: fortigate-cert-swap-windows-x64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binary
      env:
        CGO_ENABLED: 0
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -ldflags="-s -w" -o dist/${{ matrix.name }} main.go

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: dist/${{ matrix.name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Prepare release assets
      run: |
        mkdir -p release-assets
        # Copy all files from artifact directories
        find artifacts/ -type f \( -name "fortigate-cert-swap-*" \) -exec cp {} release-assets/ \;
        # Make sure all files are executable (except .exe)
        chmod +x release-assets/fortigate-cert-swap-* 2>/dev/null || true
        echo "Release assets prepared:"
        ls -la release-assets/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/*
        draft: false
        prerelease: false
        generate_release_notes: true
        body_path: RELEASE_NOTES.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}