name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            name: fortigate-cert-swap-linux-amd64
          - goos: linux
            goarch: arm64
            name: fortigate-cert-swap-linux-arm64
          - goos: darwin
            goarch: amd64
            name: fortigate-cert-swap-darwin-amd64
          - goos: darwin
            goarch: arm64
            name: fortigate-cert-swap-darwin-arm64
          - goos: windows
            goarch: amd64
            name: fortigate-cert-swap-windows-x64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binary
      env:
        CGO_ENABLED: 0
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -ldflags="-s -w" -o dist/${{ matrix.name }} main.go

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.name }}
        path: dist/${{ matrix.name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: dist/

    - name: Prepare release assets
      run: |
        mkdir -p release-assets
        find dist/ -type f -executable -o -name "*.exe" | while read file; do
          cp "$file" release-assets/
        done
        ls -la release-assets/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/*
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## FortiGate Certificate Swap - Go Edition
          
          **Revolutionary Performance**: 13.4x faster than Python version (0.026s vs 0.348s startup)
          
          ### Features
          - üöÄ **World's First Automatic Intermediate CA Management**
          - üîí **SSL Inspection Certificate Mode** with automated profile rebinding
          - üéØ **Smart Certificate Pruning** with service binding checks
          - üìä **Professional Console Output** with colors and progress indicators
          - üîß **Zero Dependencies** - Single native binary
          - üåê **Cross-Platform** - Linux, macOS, Windows (x64/ARM64)
          
          ### Download the right binary for your platform:
          - **Linux x64**: `fortigate-cert-swap-linux-amd64`
          - **Linux ARM64**: `fortigate-cert-swap-linux-arm64`
          - **macOS Intel**: `fortigate-cert-swap-darwin-amd64`
          - **macOS Apple Silicon**: `fortigate-cert-swap-darwin-arm64`
          - **Windows x64**: `fortigate-cert-swap-windows-x64.exe`
          
          ### Quick Start
          ```bash
          # Make executable (Linux/macOS)
          chmod +x fortigate-cert-swap-*
          
          # Run with your certificates
          ./fortigate-cert-swap-linux-amd64 --host your-fortigate.com --token your-api-token --cert cert.pem --key key.pem
          ```
          
          See [README.md](https://github.com/CyB0rgg/fortigate-cert-swap/blob/main/README.md) for complete documentation.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}